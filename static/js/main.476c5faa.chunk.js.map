{"version":3,"sources":["api.ts","types/filterEnum.ts","context/TodoContext.tsx","helpers/filterTodos.ts","components/TodoFilter/TodoFilter.tsx","context/UserContext.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FILTER","TodosContext","createContext","todos","isTodoLoading","toggleModal","isOpenModal","searchField","filterField","ALL","onUpdateSearch","onUpdateFilter","currentTodo","updateCurrentTodo","TodosProvider","children","useState","setTodos","setCurrentTodo","setIsTodoLoading","setIsOpenModal","setSearchField","setFilterField","useEffect","todo","finally","prev","term","visibleTodo","todoCopy","lowerSearch","toLowerCase","trim","filter","title","includes","ACTIVE","completed","COMPLETED","filterTodo","value","useMemo","Provider","TodoFilter","useContext","className","onChange","event","target","type","placeholder","style","pointerEvents","onClick","UserContext","user","onUpdateUser","userLoading","UserProvider","setUser","setUserLoading","id","userId","newUser","TodoList","map","classNames","onShowModal","Loader","TodoModal","href","name","TodoApp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.476c5faa.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FILTER {\n  ALL = '',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, {\n  createContext, useEffect, useMemo, useState,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\nimport { Context } from '../types/TodoContext';\nimport { FILTER } from '../types/filterEnum';\nimport { filterTodo } from '../helpers/filterTodos';\n\nexport const TodosContext = createContext<Context>({\n  todos: [],\n  isTodoLoading: false,\n  toggleModal: () => {},\n  isOpenModal: false,\n  searchField: '',\n  filterField: FILTER.ALL,\n  onUpdateSearch: () => {},\n  onUpdateFilter: () => {},\n  currentTodo: null,\n  updateCurrentTodo: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [isTodoLoading, setIsTodoLoading] = useState(false);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [searchField, setSearchField] = useState('');\n  const [filterField, setFilterField] = useState<FILTER>(FILTER.ALL);\n\n  useEffect(() => {\n    setIsTodoLoading(true);\n    getTodos()\n      .then((todo) => setTodos(todo))\n      .finally(() => setIsTodoLoading(false));\n  }, []);\n\n  const toggleModal = () => {\n    setIsOpenModal((prev) => !prev);\n  };\n\n  const onUpdateSearch = (term: string) => {\n    setSearchField(term);\n  };\n\n  const onUpdateFilter = (term: FILTER) => {\n    setFilterField(term);\n  };\n\n  const updateCurrentTodo = (todo: Todo) => {\n    setCurrentTodo(todo);\n  };\n\n  const visibleTodo = filterTodo(todos, { searchField, filterField });\n\n  const value = useMemo(\n    () => ({\n      todos: visibleTodo,\n      isTodoLoading,\n      toggleModal,\n      isOpenModal,\n      searchField,\n      filterField,\n      onUpdateSearch,\n      onUpdateFilter,\n      currentTodo,\n      updateCurrentTodo,\n    }),\n    [todos, isTodoLoading, isOpenModal, searchField, filterField],\n  );\n\n  return (\n    <TodosContext.Provider value={value}>{children}</TodosContext.Provider>\n  );\n};\n","/* eslint-disable max-len */\nimport { Todo } from '../types/Todo';\nimport { FILTER } from '../types/filterEnum';\n\ntype Args = {\n  searchField: string;\n  filterField: FILTER;\n};\n\nexport const filterTodo = (\n  todos: Todo[],\n  { searchField, filterField }: Args,\n): Todo[] => {\n  let todoCopy = [...todos];\n\n  if (searchField) {\n    const lowerSearch = searchField.toLowerCase().trim();\n\n    todoCopy = todoCopy.filter((todo) => todo.title.toLowerCase().includes(lowerSearch));\n  }\n\n  if (filterField) {\n    todoCopy = todoCopy.filter((todo) => {\n      switch (filterField) {\n        case FILTER.ACTIVE:\n          return !todo.completed;\n        case FILTER.COMPLETED:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n  }\n\n  return todoCopy;\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useContext } from 'react';\nimport { TodosContext } from '../../context/TodoContext';\nimport { FILTER } from '../../types/filterEnum';\n\nexport const TodoFilter = () => {\n  const {\n    searchField, filterField, onUpdateFilter, onUpdateSearch,\n  }\n    = useContext(TodosContext);\n\n  const updateSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const term = event.target.value;\n\n    onUpdateSearch(term);\n  };\n\n  const updateFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const term = event.target.value;\n\n    onUpdateFilter(term as FILTER);\n  };\n\n  const onCloseSearch = () => {\n    onUpdateSearch('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filterField}\n            data-cy=\"statusSelect\"\n            onChange={updateFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchField}\n          onChange={updateSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchField && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onCloseSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React, { createContext, useState } from 'react';\nimport { User } from '../types/User';\nimport { UserContextType } from '../types/UserContext';\nimport { getUser } from '../api';\n\nexport const UserContext = createContext<UserContextType>({\n  user: null,\n  onUpdateUser: () => {},\n  userLoading: false,\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const UserProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userLoading, setUserLoading] = useState(false);\n\n  const onUpdateUser = (id: number) => {\n    setUserLoading(true);\n    getUser(id)\n      .then((newUser) => setUser(newUser))\n      .finally(() => setUserLoading(false));\n  };\n\n  const value = {\n    user,\n    onUpdateUser,\n    userLoading,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../context/TodoContext';\nimport { UserContext } from '../../context/UserContext';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const { toggleModal, updateCurrentTodo, isOpenModal }\n    = useContext(TodosContext);\n  const { onUpdateUser } = useContext(UserContext);\n\n  const onShowModal = (id: number, todo: Todo) => {\n    onUpdateUser(id);\n    toggleModal();\n    updateCurrentTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => onShowModal(todo.userId, todo)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames({\n                      'far fa-eye': !isOpenModal,\n                      'far fa-eye-slash': isOpenModal,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { UserContext } from '../../context/UserContext';\nimport { TodosContext } from '../../context/TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const { userLoading, user } = useContext(UserContext);\n  const { toggleModal, currentTodo } = useContext(TodosContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={toggleModal}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/*eslint-disable*/\nimport React, { useContext } from \"react\";\nimport { TodoFilter } from \"../TodoFilter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodosContext } from \"../../context/TodoContext\";\nimport { Loader } from \"../Loader\";\nimport { TodoModal } from \"../TodoModal\";\n\nexport const TodoApp: React.FC = () => {\n  const { todos, isTodoLoading, isOpenModal } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isTodoLoading ? <Loader /> : <TodoList todos={todos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isOpenModal && <TodoModal />}\n    </>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoApp } from './components/TodoApp';\nimport { TodosProvider } from './context/TodoContext';\nimport { UserProvider } from './context/UserContext';\n\nexport const App: React.FC = () => {\n  return (\n    <UserProvider>\n      <TodosProvider>\n        <TodoApp />\n      </TodosProvider>\n    </UserProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}